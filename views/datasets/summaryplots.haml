!!!
- content_for(:head) do
  %script{type: 'text/javascript', src: "/charts/timeseries.js"}
  %script{type: 'text/javascript', src: "/charts/histogram.js"}
  %script{type: 'text/javascript', src: "/charts/summary_numbers.js"}
  :javascript
      $data.file = "#{@file}";
      $data.yMax = #{@y_max};
      $data.density = #{@density};
      $data.apdex_t = #{@apdex_t};
      $data.value_index = #{@value_index};
      $data.filter = "#{@filter_label}";
      $data.only = "#{@only ? '1' : '0'}";

      var refreshData = function() {
        form = d3.select("form")
        $data.yMax = d3.select("input#y_max").node().value;
        $data.density = d3.select("input#density").node().value;
        $data.apdex_t = d3.select("input#apdex_t").node().value;
        $data.filter = d3.select("select#filter").node().selectedOptions[0].value;
        var nextFile = d3.select("select#filename").node().selectedOptions[0].value;
        var switchedFile = nextFile != $data.file
        if (switchedFile) {
            $data.file = nextFile;
            $data.filter = "";
            $data.selectedBucket = -1;
            $data.selectedTimeslice = -1;
            showSelection();
        }
        $data.value_index = (d3.select("input#enduser").node().checked ? 3 : 4);
        $data.only = d3.select("input#only").node().checked ? "1" : "0";
        loadCharts(switchedFile);     
        return false;
      }
      function loadCharts(switchedFile) {
        d3.selectAll("img.busy").style("display", "inline");
        d3.json("/data/aggregate/"+$data.file+"?" + 
          "value_index=" + $data.value_index + "&" +
          "apdex_t=" + $data.apdex_t + "&" +
          "buckets=" + ($data.density * $data.width / $data.height) + "&" +
          "filter=" + $data.filter + "&" +
          "density=" + $data.density + "&" +
          "value_index=" + $data.value_index + "&" +
          "y_max=" + $data.yMax + "&" +
          "only=" + $data.only,
          
          function(error, data) {
            // calculate the maximum bucket for all the histograms.  This will help
            // us keep the y scale the same
            $data.bucketMax = 0;
            // The first bucket is the summary for the entire time range
            $data.summaryTimeslice = data.shift();
            $data.summaryTimeslice.time = new Date($data.summaryTimeslice.time);
            data.forEach(function(d) {
                // translate the timestamp into a date for display on the x axis.
                d.time = new Date(d.time);
                $data.bucketMax = d3.max([$data.bucketMax, d.bucket_max]);
            });
            $data.timeslices = data;
            $data.dispatch.newTimesliceData();
          });

        d3.select("input#enduser").attr("checked", $data.value_index == 3 ? 'true' : null);
        d3.select("input#appserver").attr("checked", $data.value_index == 4 ? 'true' : null);
        d3.select("input#only").attr("checked", $data.only == "1" ? 'true' : null);
        d3.select("input#except").attr("checked", $data.only == "0" ? 'true' : null);
      }

  :css
       body {
         font: 10px sans-serif;
       }
       .axis path,
       .axis line {
         fill: none;
         stroke: #000;
         shape-rendering: crispEdges;
       }
       .axis text {
         font: 13px sans-serif;
        }
       .series {
         fill: none;
         stroke-width: 2.5px;
       }
       .clickrect {
         fill: #F6F6F6;
         stroke: #999;
         stroke-width: 2px;
       }
       .legend { 
         font-size: 12px;
       }
       rect.legenditem { 
          fill: #FFD;
          stroke: black;
          stroke-width: 1px;
       }
       .legenditem line {
       }
       #histogram-sect > div.histogram {
         position: relative;
       }
       #summary-values {
         
       }
       div.summary-row {
         display: table-row;
         position: relative;
         float: none;
       }
       div.summary-item {
         border: solid 2px #666;
         display: inline;
         position: relative;
         float: left;
         margin: 6px;
         padding: 8px;
         width: 160px;
       }       
       .summary-item div {
         text-align: center;
         font-size: 14px;
       }
       .summary-item span.value {
         font-size: 24px;
         text-align: center;
       }
       .summary-item span.units {
         font-size: 18px;
         text-align: center;
       }

       .summary-item div.bg {
         position: absolute;
         float: left;
         top: 0;
         left: 0;
         width: 100%;
         height: 100%;
         opacity: 0.2;
       }
       div.outliers {
         position: absolute;
         background: rgba(220,220,220,0.5);
         padding: 6px;
         font-size: 16px;
         border-width: 2px;
       }
      .chart-row-section {
        position: relative;
        clear: both;
      }
      #timeseries-sect {
        left: 0px;
        float: left;
      }
      #histogram-sect {
        position: absolute;
        left: 720px;     
        float: left;
      }

#top-graph.chart-row-section
  #timeseries-sect
    %h1 
      Timeseries Plots
      %img.timeseries.busy{src:'/images/busy.gif', style: 'display:none'}
    %p 
      Click on any item in the legend to toggle its display
    .timeseries
  #histogram-sect
    %h1 
      Response Time Distribution
      %img.histogram.busy{src:'/images/busy.gif', style: 'display:none'}
    %p
      Show a histogram with summary bars at the different statistical aggregates: mean, median, 95 percentile, etc
    .histogram

#summary-values-sect.chart-row-section
  %h1
    %span#range
      All Data
    %button#reset{style: 'display: none', onClick: 'resetSelection();'}
      RESET

:javascript
  timeseriesInit(d3.select("#timeseries-sect > div.timeseries"));
  histogramInit(d3.select("#histogram-sect > div.histogram"));
  summaryInit(d3.select("div#summary-values-sect"));
  loadCharts(true);
